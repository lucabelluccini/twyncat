PROGRAM histo
VAR
       BufferLatchPosEL1252ACh1 :  t_DCTIME;
       (*BufferLatchNegEL1252ACh1 :  t_DCTIME;*)

       (*BufferLatchNegEL1252Ch1 : ARRAY[1..5000] OF t_DCTIME;*)
       (*BufferLatchPosEL1252Ch2 : ARRAY[1..5000] OF t_DCTIME;*)



       nsamples : UDINT := 0;


       histo: ARRAY [0..399999] OF UDINT;

       (*sum: T_DCTIME;*)

       i : UDINT;
       timeDiff : UDINT := 0;
       different: BOOL;
       x: UDINT := 0;
       skip: UINT := 10;
END_VAR
(* Inizializzazione*)
IF skip <> 0 THEN
       (* BufferLatchPosEL1252ACh1 *)
       BufferLatchPosEL1252ACh1 := LatchPosEL1252ACh1;
       x := 0;

       (* Strutture istogramma *)
       FOR i:= 0 TO 399999 DO
               histo[i] := 0;
       END_FOR

       skip := skip - 1;
ELSE

(* Cerco se il timestamping e' differente dal precedente *)
(* Non serve testare la parte alta se il periodo e' inferiore a 4 secondi *)
IF  (LatchPosEL1252ACh1.dwLowPart <>BufferLatchPosEL1252ACh1.dwLowPart) THEN
       different := TRUE;

       (* Ne calcolo la differenza *)
       IF LatchPosEL1252ACh1.dwHighPart <>BufferLatchPosEL1252ACh1.dwHighPart THEN
               timeDiff :=16#FFFFFFFF - BufferLatchPosEL1252ACh1.dwLowPart + LatchPosEL1252ACh1.dwLowPart + 1;
               x := timeDiff;
       ELSE
               timeDiff := LatchPosEL1252ACh1.dwLowPart - BufferLatchPosEL1252ACh1.dwLowPart;
       END_IF

ELSE
       different := FALSE;
END_IF


(* Update dell'istogramma*)
IF different THEN
       nsamples := nsamples + 1;
       histo[timeDiff/10] := histo[timeDiff/10] + 1;
END_IF


(* Tengo traccia di quando e' stato fatto il vecchio cambiamento di fronte *)
IF different THEN
       BufferLatchPosEL1252ACh1 := LatchPosEL1252ACh1;
END_IF

END_IF




ESEMPIO 2

PROGRAM get1channelFast
VAR


       diff1: ARRAY [1..250000] OF T_DCTIME;
       diff2: ARRAY [1..250000] OF T_DCTIME;
       diff3: ARRAY [1..250000] OF T_DCTIME;
       diff4: ARRAY [1..250000] OF T_DCTIME;
       diff5: ARRAY [1..16000] OF T_DCTIME;


       BufferLatchPosEL1252ACh1 :  t_DCTIME;
       (*BufferLatchNegEL1252ACh1 :  t_DCTIME;*)

       (*BufferLatchNegEL1252Ch1 : ARRAY[1..5000] OF t_DCTIME;*)
       (*BufferLatchPosEL1252Ch2 : ARRAY[1..5000] OF t_DCTIME;*)


       cnt: UDINT:=0;
       nexp: UDINT:= 1016000;


       array_num: UDINT :=0;

       first: BOOL := TRUE;

       different: BOOL;
       (*skip: UDINT := 3000000; (*10 minuti *) *)
       skip: UDINT := 1000;
END_VAR
(* Inizializzazione*)
IF skip <> 0 THEN
       (* BufferLatchPosEL1252ACh1 *)
       BufferLatchPosEL1252ACh1 := LatchPosEL1252ACh1;

       skip := skip - 1;
ELSE



(* Cerco se il timestamping e' differente dal precedente *)
(* Non serve testare la parte alta se il periodo e' inferiore a 4 secondi *)
IF  (LatchPosEL1252ACh1.dwLowPart <>BufferLatchPosEL1252ACh1.dwLowPart) THEN
       different := TRUE;
ELSE
       different := FALSE;
END_IF




               (*IF skip <> 0 THEN
                               skip := skip-1;
               ELSE*)

                       IF cnt < nexp+1 THEN
                               IF  different THEN


                                       CASE array_num OF
                                               0: diff1[cnt]:=          LatchPosEL1252ACh1;
                                               1: diff2[cnt-250000]:=   LatchPosEL1252ACh1;
                                               2: diff3[cnt-500000]:=   LatchPosEL1252ACh1;
                                               3: diff4[cnt-750000]:=   LatchPosEL1252ACh1;
                                               4: diff5[cnt-1000000]:=  LatchPosEL1252ACh1;
                                       END_CASE

                                       array_num := cnt / 250000;
                                       cnt := cnt+1;
                               END_IF
                       END_IF

               (*END_IF*)

               (* Tengo traccia di quando e' stato fatto il vecchio cambiamento di fronte *)
               IF different THEN
                       BufferLatchPosEL1252ACh1 := LatchPosEL1252ACh1;
               END_IF


END_IF


(*wRITE();*)