pointer.int myPointer, mySecondPointer, myThirdPointer
pointer.int x
enum.myEnum = {mon = 1,tue,wed,thu,fri,sat,sun}

func myfunct:
	in.int par6, par7 = 11, par9 = 66, stringa = 1001
	out.int array[1:10]= [1,2,3,4,5,6,7,8,9,10], array2[1:4] = [1,2,3,4]
	in.int arrayZ[1:10][2:30][3:20]
	in.bool par1, par2, par3
	out.bool result
	myFB(a=1,b=2,c=3)
	myF(1,2,3)
	a += b - 1
	result = (par1+par2+par3*4-10)/(par1+par2+par3*4+10)
	result = (par1+par2+par3*4-10)/10
	result = (par1+par2+par3*4-10)/var2
	result = vaer/(par1+par2+par3*4+10)
	result = 100+(par1+par2+par3*4-10)/(par1+par2+par3*4+10)
	result = 10+(100-par1)*10+par2/4+(100+((par3-10)/4)-20)
	in.int par4, par5
	out.real anotherOutput
	anotherOutput = 10.4
	
func functionThatReturnsBool returns bool:
	anotherOutput = 10.4
	anotherOutput = 10.4
	anotherOutput = 10.4

prog test:
	in.int par6, par7 = 11, par9 = 66, stringa = 1001
	out.int array[1:10]= [1,2,3,4,5,6,7,8,9,10], array2[1:4] = [1,2,3,4]
	in.int arrayZ[1:10][2:30][3:20]
	in.bool par1, par2, par3
	out.bool result
	out.myType myVar = '3', myVar2 = 3, myVar3[1:10] = [1,2,3,4,5,6,7,8,9,10]
	pippo = 99
	pluto = "Stringa"
	myfunct(a=1,b=2,c=3)
	paperino = 'c'
	in.bool flag
	if test:
		bool flagITA
		bool flagROM
		myVar = True
	else:
		myVar = False
	minni = 8
	while (pippo != myVar2) & flag :
		instruction += 100 + a + b + c
		instruction -= 102002
		instruction = 102002 != 3
		valueHEX = h!aaFF3000 + h!0000f
		valueBIN = b!00001001 + b!00001
		case valueHEX:
			h!00001:
				flag = True
				myVar = False
			h!0000f:
				flag = True
			default:
				myVar &= False
		variabile = (pippo - (pluto << (4 + result)) << 100) >> 2
		careIt %= 2
		instruction = 102002**4
		value += base**exponent
		value %= base**10
		repeat:
			instr(a=5)
			instrb(x=a+b,z=c)
			instrc(test=10,var=9)
		until x == True
		instruction3 = 7
